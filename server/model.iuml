```
@startuml

entity "Users" as users {
  *id : TEXT
  *username : TEXT
  *passKey : TEXT
  +createUser(id, username, passKey) : User
  +getUserViaId(id) : User
  +getUserViaPass(passKey) : User
  +getUserViaName(username) : User
}

entity "Images" as images {
  *id : TEXT
  *userId : TEXT
  +addImage(userId, id) : void
  +deleteImages(userId) : void
  +getImageIds(userId) : Array<{ id: string }>
  +getRandomImageIds(fetchedUserIds: Set<string>) : { username: string, imageIds: Array<string>, userId: string } | null
}

entity "Stars" as stars {
  *id : INTEGER
  *imageId : INTEGER
  *starRating : REAL
  +createStar(imageId, starRating) : void
  +getStarsById(imageId) : Array<{ starRating: number }>
}

entity "Comments" as comments {
  *id : INTEGER
  *imageId : INTEGER
  *comment : TEXT
  +addComment(imageId, comment) : void
  +getCommentsById(imageId) : Array<{ comment: string }>
}

entity "IpLookup" as ipLookup {
  *id : INTEGER
  *ipAddress : TEXT
  *userId : TEXT
  +addIpLookup(ipAddress, userId) : void
  +getIpLookupByIpAddress(ipAddress) : { id: number, ipAddress: string, userId: string } | null
}

entity "RatingLookup" as ratingLookup {
  *ipAddress : TEXT
  *imageId : INTEGER
  *commented : BOOLEAN
  *starRated : BOOLEAN
  +addRatingLookup(ipAddress, imageId) : void
  +getRatingLookup(imageId) : { ipAddress: string, imageId: string, commented: boolean, starRated: boolean } | null
  +upsertRatingLookup(ipAddress, imageId, commented, starRated) : void
}

entity "/random" as random {
  +getRandomImageIds(fetchedUserIds: Set<string>) : { username: string, imageIds: Array<string>, userId: string } | null
}

entity "/generate-account" as generateAccount {
  +generateAccount(username: string): Promise<{ data: { passKey: string, username: string } | null, error: string | null }>
}

entity "/receive-rating" as receiveRating {
  +receiveRating(ipAddress: string, starRating: number, comment: string, imageId: string): Promise<{ message: string | null, error: string | null }>
}

entity "/upload" as upload {
  +uploadImage(userId: string, image: File): Promise<{ message: string | null, error: string | null }>
}

entity "/user/[pass]" as userPass {
  +getUserData(passKey: string): Promise<{ user: User, starRatingAverages: number[], imageIds: string[], starRatingTotals: number[], comments: string[][] }>
}

users ||--o{ images : "creates"
images ||--o{ stars : "receives"
images ||--o{ comments : "receives"
users ||--o{ ipLookup : "has"
ipLookup ||--o{ ratingLookup : "has"
ratingLookup }|--|| images : "rates"

random --> images : "gets"
random --> users : "gets"

generateAccount --> users : "creates"
generateAccount --> ipLookup : "adds"

receiveRating --> stars : "rates"
receiveRating --> comments : "adds"
receiveRating --> ratingLookup : "updates"

upload --> images : "adds"
upload --> ratingLookup : "creates"

userPass --|> users : "gets"
userPass --|> images : "gets"
userPass --|> comments : "gets"
userPass --|> stars : "gets"

@enduml
```